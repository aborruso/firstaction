name: scarica e tieni aggiornati i dati openregio

on:
  push:
  repository_dispatch:
  schedule:
    - cron:  '52 * * * *'

jobs:
  scheduled:
    runs-on: ubuntu-latest
    steps:
    - name: Check out this repo
      uses: actions/checkout@v2
    - name: Installa le utility
      run: |-
        wget https://github.com/johnkerl/miller/releases/download/v5.7.0/mlr.linux.x86_64
        mv mlr.linux.x86_64 mlr
        chmod +x mlr
    - name: scarica e tieni aggiornati i dati openregio
      run: |-
        curl -kL https://openregio.anbsc.it/statistiche/export/5/immobili/0/0/0/json | jq -c '.[]' >openregio_immobiliDestinati.jsonl
        curl -kL https://openregio.anbsc.it/statistiche/export/5/aziende/0/0/0/json | jq -c '.[]' >openregio_aziendeDestinate.jsonl
        curl -kL https://openregio.anbsc.it/statistiche/export_procedure/0/0/0/0/json | jq -c '.[]' >openregio_procedureGestione.jsonl
        ./mlr --j2c unsparsify then clean-whitespace openregio_immobiliDestinati.jsonl >openregio_immobiliDestinati.csv
        ./mlr --j2c unsparsify then clean-whitespace openregio_aziendeDestinate.jsonl >openregio_aziendeDestinate.csv
        ./mlr --j2c unsparsify then clean-whitespace openregio_procedureGestione.jsonl >openregio_procedureGestione.csv
    - name: Committa e pusha se ci sono variazioni nei dati
      run: |-
        git config user.name "Automated"
        git config user.email "actions@users.noreply.github.com"
        git add -A
        timestamp=$(date -u)
        git commit -m "Latest data: ${timestamp}" || exit 0
        git push
